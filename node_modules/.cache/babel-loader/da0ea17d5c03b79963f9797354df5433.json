{"ast":null,"code":"var _jsxFileName = \"/Users/aris/ABC/DU/code/integrasi/front-end/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from \"react\";\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\nimport { API, setAuthToken } from \"../config/api\";\nimport { useMutation } from \"react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport { Button, Form, Modal, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(8).required()\n});\n\nfunction Login(props) {\n  _s();\n\n  var _onSubmit$error2, _onSubmit$error2$resp, _onSubmit$error2$resp2, _onSubmit$error3, _onSubmit$error3$resp, _onSubmit$error3$resp2;\n\n  const [state, dispatch] = useContext(AuthContext);\n  const router = useHistory();\n\n  const handleClose = () => {\n    dispatch({\n      type: \"MODAL_LOGIN_CLOSE\"\n    });\n    state.redirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n\n  const handleOpenRegister = () => {\n    handleClose();\n    dispatch({\n      type: \"MODAL_REGISTER_OPEN\"\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = useMutation(async data => {\n    var _response$data, _response$data$data, _response$data$data$u, _response$data2, _response$data2$data, _response$data2$data$, _response$data3, _response$data3$data;\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      email: data.email,\n      password: data.password\n    });\n    const response = await API.post(\"/login\", body, config);\n    console.log(\"res-akhir\", (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : (_response$data$data$u = _response$data$data.user) === null || _response$data$data$u === void 0 ? void 0 : _response$data$data$u.token);\n    setAuthToken((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$data = _response$data2.data) === null || _response$data2$data === void 0 ? void 0 : (_response$data2$data$ = _response$data2$data.user) === null || _response$data2$data$ === void 0 ? void 0 : _response$data2$data$.token);\n    dispatch({\n      type: \"LOGIN_SUCCESS\",\n      payload: (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : (_response$data3$data = _response$data3.data) === null || _response$data3$data === void 0 ? void 0 : _response$data3$data.user\n    });\n    router.push(\"/\");\n    handleClose();\n    return response;\n  });\n  const [visibleAlert, setVisibleAlert] = useState(false);\n  useEffect(() => {\n    var _onSubmit$error, _onSubmit$error$respo, _onSubmit$error$respo2;\n\n    if ((_onSubmit$error = onSubmit.error) === null || _onSubmit$error === void 0 ? void 0 : (_onSubmit$error$respo = _onSubmit$error.response) === null || _onSubmit$error$respo === void 0 ? void 0 : (_onSubmit$error$respo2 = _onSubmit$error$respo.data) === null || _onSubmit$error$respo2 === void 0 ? void 0 : _onSubmit$error$respo2.message) {\n      setVisibleAlert(true);\n      setTimeout(() => {\n        setVisibleAlert(false);\n      }, 2000);\n    }\n  }, [(_onSubmit$error2 = onSubmit.error) === null || _onSubmit$error2 === void 0 ? void 0 : (_onSubmit$error2$resp = _onSubmit$error2.response) === null || _onSubmit$error2$resp === void 0 ? void 0 : (_onSubmit$error2$resp2 = _onSubmit$error2$resp.data) === null || _onSubmit$error2$resp2 === void 0 ? void 0 : _onSubmit$error2$resp2.message]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.show ? props.show : state.modalLogin // onHide={handleClose}\n    ,\n    onHide: props.onHide ? props.onHide : handleClose,\n    size: \"sm\",\n    centered: true,\n    className: state.error ? \"error avenir \" : \"avenir\",\n    children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-title mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-yellow\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        show: visibleAlert,\n        onClose: () => setVisibleAlert(false),\n        dismissible: true,\n        children: (_onSubmit$error3 = onSubmit.error) === null || _onSubmit$error3 === void 0 ? void 0 : (_onSubmit$error3$resp = _onSubmit$error3.response) === null || _onSubmit$error3$resp === void 0 ? void 0 : (_onSubmit$error3$resp2 = _onSubmit$error3$resp.data) === null || _onSubmit$error3$resp2 === void 0 ? void 0 : _onSubmit$error3$resp2.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(onSubmit.mutate),\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, { ...register(\"email\"),\n              type: \"email\",\n              name: \"email\",\n              className: \"form-control input-bg\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, { ...register(\"password\"),\n              type: \"password\",\n              name: \"password\",\n              className: \"form-control input-bg\",\n              placeholder: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"brown\",\n            className: \"btn btn-block btn-round\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-muted delimiter mt-2\",\n          children: [\"Don't have an account ? klick\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: handleOpenRegister,\n            className: \"font-weight-bold text-muted\",\n            children: \"here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 7\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Login, \"8PBAUiBzvqgtOaubO/7D5AoMDf4=\", false, function () {\n  return [useHistory, useForm, useMutation];\n});\n\n_c = Login;\nexport default Login; // import { useContext, useState } from \"react\";\n// import { Link, useHistory, Redirect } from \"react-router-dom\";\n// import { API, setAuthToken } from \"../config/api\";\n// import { AuthContext } from \"../contexts/authContext\";\n// import { Button, Form, Modal, Alert } from \"react-bootstrap\";\n// function Login(props) {\n// \t// console.log(props);\n// \tconst [state, dispatch] = useContext(AuthContext);\n// \tconst router = useHistory();\n// \tconst [form, setForm] = useState({\n// \t\temail: \"\",\n// \t\tpassword: \"\",\n// \t});\n// \tconst { email, password } = form;\n// \tconst handleClose = () => {\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_LOGIN_CLOSE\",\n// \t\t});\n// \t\tstate.redirect ? <Redirect to=\"/\" /> : <></>;\n// \t};\n// \tconst handleOpenRegister = () => {\n// \t\thandleClose();\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_REGISTER_OPEN\",\n// \t\t});\n// \t};\n// \tconst onChange = (e) => {\n// \t\tconst updateForm = { ...form };\n// \t\tupdateForm[e.target.name] = e.target.value;\n// \t\tsetForm(updateForm);\n// \t};\n// \tconst handleSubmit = async (e) => {\n// \t\te.preventDefault();\n// \t\thandleClose();\n// \t\ttry {\n// \t\t\tconst config = {\n// \t\t\t\theaders: {\n// \t\t\t\t\t\"Content-Type\": \"application/json\",\n// \t\t\t\t},\n// \t\t\t};\n// \t\t\tconst body = JSON.stringify({\n// \t\t\t\temail,\n// \t\t\t\tpassword,\n// \t\t\t});\n// \t\t\tconst response = await API.post(\"/login\", body, config);\n// \t\t\tdispatch({\n// \t\t\t\ttype: \"LOGIN_SUCCESS\",\n// \t\t\t\tpayload: response.data.data.user,\n// \t\t\t});\n// \t\t\tsetForm({\n// \t\t\t\tpassword: \"\",\n// \t\t\t});\n// \t\t\tsetAuthToken(response.data.data.user.token);\n// \t\t\trouter.push(\"/\");\n// \t\t\t//   console.log(response.data);\n// \t\t} catch (err) {\n// \t\t\tconsole.log(\"err\", err.response.status.status);\n// \t\t\t// if (err.response.status === 400) {\n// \t\t\t// \talert(\"sas\");\n// \t\t\t// } else {\n// \t\t\t// }\n// \t\t}\n// \t};\n// \t// console.log(\"login\", handleSubmit);\n// \treturn (\n// \t\t<Modal\n// \t\t\t// show={state.modalLogin}{modalshow}\n// \t\t\tshow={props.show ? props.show : state.modalLogin}\n// \t\t\t// onHide={handleClose}\n// \t\t\tonHide={props.onHide ? props.onHide : handleClose}\n// \t\t\tsize=\"sm\"\n// \t\t\tcentered\n// \t\t\tclassName={state.error ? \"error avenir \" : \"avenir\"}\n// \t\t>\n// \t\t\t<Modal.Body>\n// \t\t\t\t<div className=\"form-title mb-3\">\n// \t\t\t\t\t<h4 className=\"text-yellow\">Login</h4>\n// \t\t\t\t</div>\n// \t\t\t\t{/* {addrestaurant.error?.response?.data?.message && ( */}\n// \t\t\t\t{/* <Alert variant=\"danger\"> */}\n// \t\t\t\t{/* {addrestaurant.error?.response?.data?.message} */}\n// \t\t\t\t{/* </Alert> */}\n// \t\t\t\t{/* // )} */}\n// \t\t\t\t<div className=\"d-flex flex-column\">\n// \t\t\t\t\t<Form onSubmit={(e) => handleSubmit(e)}>\n// \t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\tvalue={form.email}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\ttype=\"email\"\n// \t\t\t\t\t\t\t\tname=\"email\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Email\"\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\tvalue={form.password}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\ttype=\"password\"\n// \t\t\t\t\t\t\t\tname=\"password\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Password\"\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Button\n// \t\t\t\t\t\t\ttype=\"submit\"\n// \t\t\t\t\t\t\tvariant=\"brown\"\n// \t\t\t\t\t\t\tclassName=\"btn btn-block btn-round\"\n// \t\t\t\t\t\t\tdisabled={!form.email || !form.password ? true : false}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tLogin\n// \t\t\t\t\t\t</Button>\n// \t\t\t\t\t</Form>\n// \t\t\t\t\t<p className=\"text-danger\">{state.error}</p>\n// \t\t\t\t\t{/* <pre>{JSON.stringify(form, 2, null)}</pre> */}\n// \t\t\t\t\t<div className=\"text-center text-muted delimiter mt-2\">\n// \t\t\t\t\t\tDon't have an account ? klick\n// \t\t\t\t\t\t<Link\n// \t\t\t\t\t\t\tto=\"#\"\n// \t\t\t\t\t\t\tonClick={handleOpenRegister}\n// \t\t\t\t\t\t\tclassName=\"font-weight-bold text-muted\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\there\n// \t\t\t\t\t\t</Link>\n// \t\t\t\t\t\t.\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</Modal.Body>\n// \t\t</Modal>\n// \t);\n// }\n// export default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/aris/ABC/DU/code/integrasi/front-end/src/pages/Login.js"],"names":["useContext","useState","useEffect","Link","useHistory","Redirect","API","setAuthToken","useMutation","useForm","yupResolver","yup","AuthContext","Button","Form","Modal","Alert","schema","object","shape","email","string","required","password","min","Login","props","state","dispatch","router","handleClose","type","redirect","handleOpenRegister","register","handleSubmit","formState","errors","resolver","onSubmit","data","config","headers","body","JSON","stringify","response","post","console","log","user","token","payload","push","visibleAlert","setVisibleAlert","error","message","setTimeout","show","modalLogin","onHide","mutate"],"mappings":"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":["import { useContext, useState, useEffect } from \"react\";\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\nimport { API, setAuthToken } from \"../config/api\";\nimport { useMutation } from \"react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport { AuthContext } from \"../contexts/authContext\";\nimport { Button, Form, Modal, Alert } from \"react-bootstrap\";\n\nconst schema = yup.object().shape({\n\temail: yup.string().email().required(),\n\tpassword: yup.string().min(8).required(),\n});\n\nfunction Login(props) {\n\tconst [state, dispatch] = useContext(AuthContext);\n\tconst router = useHistory();\n\n\tconst handleClose = () => {\n\t\tdispatch({\n\t\t\ttype: \"MODAL_LOGIN_CLOSE\",\n\t\t});\n\t\tstate.redirect ? <Redirect to=\"/\" /> : <></>;\n\t};\n\tconst handleOpenRegister = () => {\n\t\thandleClose();\n\t\tdispatch({\n\t\t\ttype: \"MODAL_REGISTER_OPEN\",\n\t\t});\n\t};\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm({\n\t\tresolver: yupResolver(schema),\n\t});\n\n\tconst onSubmit = useMutation(async (data) => {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\t\tconst body = JSON.stringify({\n\t\t\temail: data.email,\n\t\t\tpassword: data.password,\n\t\t});\n\t\tconst response = await API.post(\"/login\", body, config);\n\n\t\tconsole.log(\"res-akhir\", response.data?.data?.user?.token);\n\n\t\tsetAuthToken(response.data?.data?.user?.token);\n\t\tdispatch({\n\t\t\ttype: \"LOGIN_SUCCESS\",\n\t\t\tpayload: response.data?.data?.user,\n\t\t});\n\n\t\trouter.push(\"/\");\n\t\thandleClose();\n\t\treturn response;\n\t});\n\n\tconst [visibleAlert, setVisibleAlert] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (onSubmit.error?.response?.data?.message) {\n\t\t\tsetVisibleAlert(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetVisibleAlert(false);\n\t\t\t}, 2000);\n\t\t}\n\t}, [onSubmit.error?.response?.data?.message]);\n\n\treturn (\n\t\t<Modal\n\t\t\tshow={props.show ? props.show : state.modalLogin}\n\t\t\t// onHide={handleClose}\n\t\t\tonHide={props.onHide ? props.onHide : handleClose}\n\t\t\tsize=\"sm\"\n\t\t\tcentered\n\t\t\tclassName={state.error ? \"error avenir \" : \"avenir\"}\n\t\t>\n\t\t\t<Modal.Body>\n\t\t\t\t<div className=\"form-title mb-3\">\n\t\t\t\t\t<h4 className=\"text-yellow\">Login</h4>\n\t\t\t\t</div>\n\t\t\t\t<Alert\n\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\tshow={visibleAlert}\n\t\t\t\t\tonClose={() => setVisibleAlert(false)}\n\t\t\t\t\tdismissible\n\t\t\t\t>\n\t\t\t\t\t{onSubmit.error?.response?.data?.message}\n\t\t\t\t</Alert>\n\t\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmit.mutate)}>\n\t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t{...register(\"email\")}\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t{...register(\"password\")}\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvariant=\"brown\"\n\t\t\t\t\t\t\tclassName=\"btn btn-block btn-round\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t\t<p className=\"text-danger\">{state.error}</p>\n\t\t\t\t\t<div className=\"text-center text-muted delimiter mt-2\">\n\t\t\t\t\t\tDon't have an account ? klick\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto=\"#\"\n\t\t\t\t\t\t\tonClick={handleOpenRegister}\n\t\t\t\t\t\t\tclassName=\"font-weight-bold text-muted\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\there\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t.\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal.Body>\n\t\t</Modal>\n\t);\n}\nexport default Login;\n\n// import { useContext, useState } from \"react\";\n// import { Link, useHistory, Redirect } from \"react-router-dom\";\n// import { API, setAuthToken } from \"../config/api\";\n\n// import { AuthContext } from \"../contexts/authContext\";\n\n// import { Button, Form, Modal, Alert } from \"react-bootstrap\";\n\n// function Login(props) {\n// \t// console.log(props);\n// \tconst [state, dispatch] = useContext(AuthContext);\n// \tconst router = useHistory();\n// \tconst [form, setForm] = useState({\n// \t\temail: \"\",\n// \t\tpassword: \"\",\n// \t});\n// \tconst { email, password } = form;\n\n// \tconst handleClose = () => {\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_LOGIN_CLOSE\",\n// \t\t});\n// \t\tstate.redirect ? <Redirect to=\"/\" /> : <></>;\n// \t};\n// \tconst handleOpenRegister = () => {\n// \t\thandleClose();\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_REGISTER_OPEN\",\n// \t\t});\n// \t};\n\n// \tconst onChange = (e) => {\n// \t\tconst updateForm = { ...form };\n// \t\tupdateForm[e.target.name] = e.target.value;\n// \t\tsetForm(updateForm);\n// \t};\n\n// \tconst handleSubmit = async (e) => {\n// \t\te.preventDefault();\n// \t\thandleClose();\n// \t\ttry {\n// \t\t\tconst config = {\n// \t\t\t\theaders: {\n// \t\t\t\t\t\"Content-Type\": \"application/json\",\n// \t\t\t\t},\n// \t\t\t};\n\n// \t\t\tconst body = JSON.stringify({\n// \t\t\t\temail,\n// \t\t\t\tpassword,\n// \t\t\t});\n\n// \t\t\tconst response = await API.post(\"/login\", body, config);\n\n// \t\t\tdispatch({\n// \t\t\t\ttype: \"LOGIN_SUCCESS\",\n// \t\t\t\tpayload: response.data.data.user,\n// \t\t\t});\n// \t\t\tsetForm({\n// \t\t\t\tpassword: \"\",\n// \t\t\t});\n// \t\t\tsetAuthToken(response.data.data.user.token);\n// \t\t\trouter.push(\"/\");\n\n// \t\t\t//   console.log(response.data);\n// \t\t} catch (err) {\n// \t\t\tconsole.log(\"err\", err.response.status.status);\n// \t\t\t// if (err.response.status === 400) {\n// \t\t\t// \talert(\"sas\");\n// \t\t\t// } else {\n// \t\t\t// }\n// \t\t}\n// \t};\n// \t// console.log(\"login\", handleSubmit);\n// \treturn (\n// \t\t<Modal\n// \t\t\t// show={state.modalLogin}{modalshow}\n// \t\t\tshow={props.show ? props.show : state.modalLogin}\n// \t\t\t// onHide={handleClose}\n// \t\t\tonHide={props.onHide ? props.onHide : handleClose}\n// \t\t\tsize=\"sm\"\n// \t\t\tcentered\n// \t\t\tclassName={state.error ? \"error avenir \" : \"avenir\"}\n// \t\t>\n// \t\t\t<Modal.Body>\n// \t\t\t\t<div className=\"form-title mb-3\">\n// \t\t\t\t\t<h4 className=\"text-yellow\">Login</h4>\n// \t\t\t\t</div>\n// \t\t\t\t{/* {addrestaurant.error?.response?.data?.message && ( */}\n// \t\t\t\t{/* <Alert variant=\"danger\"> */}\n// \t\t\t\t{/* {addrestaurant.error?.response?.data?.message} */}\n// \t\t\t\t{/* </Alert> */}\n// \t\t\t\t{/* // )} */}\n// \t\t\t\t<div className=\"d-flex flex-column\">\n// \t\t\t\t\t<Form onSubmit={(e) => handleSubmit(e)}>\n// \t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\tvalue={form.email}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\ttype=\"email\"\n// \t\t\t\t\t\t\t\tname=\"email\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Email\"\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n\n// \t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\tvalue={form.password}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\ttype=\"password\"\n// \t\t\t\t\t\t\t\tname=\"password\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Password\"\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Button\n// \t\t\t\t\t\t\ttype=\"submit\"\n// \t\t\t\t\t\t\tvariant=\"brown\"\n// \t\t\t\t\t\t\tclassName=\"btn btn-block btn-round\"\n// \t\t\t\t\t\t\tdisabled={!form.email || !form.password ? true : false}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tLogin\n// \t\t\t\t\t\t</Button>\n// \t\t\t\t\t</Form>\n// \t\t\t\t\t<p className=\"text-danger\">{state.error}</p>\n// \t\t\t\t\t{/* <pre>{JSON.stringify(form, 2, null)}</pre> */}\n// \t\t\t\t\t<div className=\"text-center text-muted delimiter mt-2\">\n// \t\t\t\t\t\tDon't have an account ? klick\n// \t\t\t\t\t\t<Link\n// \t\t\t\t\t\t\tto=\"#\"\n// \t\t\t\t\t\t\tonClick={handleOpenRegister}\n// \t\t\t\t\t\t\tclassName=\"font-weight-bold text-muted\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\there\n// \t\t\t\t\t\t</Link>\n// \t\t\t\t\t\t.\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</Modal.Body>\n// \t\t</Modal>\n// \t);\n// }\n// export default Login;\n"]},"metadata":{},"sourceType":"module"}