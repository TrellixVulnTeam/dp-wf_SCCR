{"ast":null,"code":"var _jsxFileName = \"/Users/aris/ABC/DU/code/integrasi/front-end/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { API, setAuthToken } from \"../config/api\";\nimport { useMutation } from \"react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport { Button, Form, Modal, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(8).required()\n});\n\nfunction Register() {\n  _s();\n\n  var _onSubmit$error2, _onSubmit$error2$resp, _onSubmit$error2$resp2, _onSubmit$error3, _onSubmit$error3$resp, _onSubmit$error3$resp2;\n\n  const router = useHistory();\n  const [state, dispatch] = useContext(AuthContext);\n  const [form, setForm] = useState({\n    email: \"\",\n    fullName: \"\",\n    password: \"\",\n    phone: \"\",\n    gender: \"\"\n  });\n  const {\n    email,\n    password,\n    fullName,\n    phone,\n    gender\n  } = form;\n  const addUser = useMutation(async () => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      email,\n      password,\n      fullName,\n      phone,\n      gender\n    });\n    const response = await API.post(\"/register\", body, config);\n    return response;\n  });\n\n  const handleClose = () => {\n    dispatch({\n      type: \"MODAL_REGISTER_CLOSE\"\n    });\n  };\n\n  const handleOpenLogin = () => {\n    handleClose();\n    dispatch({\n      type: \"MODAL_LOGIN_OPEN\"\n    });\n  };\n\n  const handleOpenRegister = () => {\n    handleClose();\n    dispatch({\n      type: \"MODAL_REGISTER_OPEN\"\n    });\n  };\n\n  const onChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const registerUser = e => {\n    var _addUser$error, _addUser$error$respon, _addUser$error$respon2, _addUser$data;\n\n    e.preventDefault();\n    addUser.mutate();\n\n    if ((_addUser$error = addUser.error) === null || _addUser$error === void 0 ? void 0 : (_addUser$error$respon = _addUser$error.response) === null || _addUser$error$respon === void 0 ? void 0 : (_addUser$error$respon2 = _addUser$error$respon.data) === null || _addUser$error$respon2 === void 0 ? void 0 : _addUser$error$respon2.message) {\n      handleClose();\n      handleOpenRegister();\n    }\n\n    if ((_addUser$data = addUser.data) === null || _addUser$data === void 0 ? void 0 : _addUser$data.data) {\n      setForm({\n        email: \"\",\n        fullName: \"\",\n        password: \"\",\n        phone: \"\",\n        gender: \"\"\n      });\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: addUser.data.data.data.user\n      });\n      setAuthToken(addUser.data.data.data.user.token);\n      router.push(\"/\");\n      console.log(\"ok\");\n      handleClose();\n    }\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = useMutation(async data => {\n    var _response$data, _response$data$data, _response$data$data$u, _response$data2, _response$data2$data, _response$data2$data$, _response$data3, _response$data3$data;\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      email: data.email,\n      password: data.password,\n      fullName: data.fullName\n    });\n    const response = await API.post(\"/register\", body, config);\n    console.log(\"res-akhir\", (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : (_response$data$data$u = _response$data$data.user) === null || _response$data$data$u === void 0 ? void 0 : _response$data$data$u.token);\n    setAuthToken((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$data = _response$data2.data) === null || _response$data2$data === void 0 ? void 0 : (_response$data2$data$ = _response$data2$data.user) === null || _response$data2$data$ === void 0 ? void 0 : _response$data2$data$.token);\n    dispatch({\n      type: \"LOGIN_SUCCESS\",\n      payload: (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : (_response$data3$data = _response$data3.data) === null || _response$data3$data === void 0 ? void 0 : _response$data3$data.user\n    });\n    router.push(\"/\");\n    return response;\n  }); // alert\n\n  const [visibleAlert, setVisibleAlert] = useState(false);\n  useEffect(() => {\n    var _onSubmit$error, _onSubmit$error$respo, _onSubmit$error$respo2;\n\n    if ((_onSubmit$error = onSubmit.error) === null || _onSubmit$error === void 0 ? void 0 : (_onSubmit$error$respo = _onSubmit$error.response) === null || _onSubmit$error$respo === void 0 ? void 0 : (_onSubmit$error$respo2 = _onSubmit$error$respo.data) === null || _onSubmit$error$respo2 === void 0 ? void 0 : _onSubmit$error$respo2.message) {\n      setVisibleAlert(true);\n      setTimeout(() => {\n        setVisibleAlert(false);\n      }, 2000);\n    }\n  }, [(_onSubmit$error2 = onSubmit.error) === null || _onSubmit$error2 === void 0 ? void 0 : (_onSubmit$error2$resp = _onSubmit$error2.response) === null || _onSubmit$error2$resp === void 0 ? void 0 : (_onSubmit$error2$resp2 = _onSubmit$error2$resp.data) === null || _onSubmit$error2$resp2 === void 0 ? void 0 : _onSubmit$error2$resp2.message]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: state.modalRegister,\n    onHide: handleClose,\n    size: \"sm\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-title mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-yellow\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        show: visibleAlert,\n        onClose: () => setVisibleAlert(false),\n        dismissible: true,\n        children: (_onSubmit$error3 = onSubmit.error) === null || _onSubmit$error3 === void 0 ? void 0 : (_onSubmit$error3$resp = _onSubmit$error3.response) === null || _onSubmit$error3$resp === void 0 ? void 0 : (_onSubmit$error3$resp2 = _onSubmit$error3$resp.data) === null || _onSubmit$error3$resp2 === void 0 ? void 0 : _onSubmit$error3$resp2.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => registerUser(e),\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              className: \"form-control input-bg\",\n              placeholder: \"Email\",\n              value: email,\n              name: \"email\",\n              onChange: e => onChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"password\",\n              value: password,\n              onChange: e => onChange(e),\n              className: \"form-control input-bg\",\n              placeholder: \"Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"form-control input-bg\",\n              placeholder: \"Full Name\",\n              name: \"fullName\",\n              value: fullName,\n              onChange: e => onChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"form-control input-bg\",\n              placeholder: \"Gender\",\n              name: \"gender\",\n              value: gender,\n              onChange: e => onChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"form-control input-bg\",\n              placeholder: \"Phone\",\n              name: \"phone\",\n              value: phone,\n              onChange: e => onChange(e),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"brown\",\n            className: \"btn btn-block btn-round\" // onClick={registerUser()}\n            ,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: state.errormail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-muted delimiter mt-2 \",\n          children: [\"Already have an account ? klick \", \"\\u00A0\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: handleOpenLogin,\n            className: \"font-weight-bold text-muted\",\n            children: \"here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 7\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Register, \"CRKRYShXjMKeKDQDMCv8LVAxjO0=\", false, function () {\n  return [useHistory, useMutation, useForm, useMutation];\n});\n\n_c = Register;\nexport default Register; // import { useContext, useState } from \"react\";\n// import { Link, useHistory } from \"react-router-dom\";\n// import { AuthContext } from \"../contexts/authContext\";\n// import { Button, Form, Modal, Alert } from \"react-bootstrap\";\n// import { useMutation } from \"react-query\";\n// import { API, setAuthToken } from \"../config/api\";\n// function Register() {\n// \tconst router = useHistory();\n// \tconst [state, dispatch] = useContext(AuthContext);\n// \tconst [form, setForm] = useState({\n// \t\temail: \"\",\n// \t\tfullName: \"\",\n// \t\tpassword: \"\",\n// \t\tphone: \"\",\n// \t\tgender: \"\",\n// \t});\n// \tconst { email, password, fullName, phone, gender } = form;\n// \tconst addUser = useMutation(async () => {\n// \t\tconst config = {\n// \t\t\theaders: {\n// \t\t\t\t\"Content-Type\": \"application/json\",\n// \t\t\t},\n// \t\t};\n// \t\tconst body = JSON.stringify({\n// \t\t\temail,\n// \t\t\tpassword,\n// \t\t\tfullName,\n// \t\t\tphone,\n// \t\t\tgender,\n// \t\t});\n// \t\tconst response = await API.post(\"/register\", body, config);\n// \t\treturn response;\n// \t});\n// \t// const handleSubmit = () => {\n// \t// \taddUser.mutate();\n// \t// };\n// \tconst handleClose = () => {\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_REGISTER_CLOSE\",\n// \t\t});\n// \t};\n// \tconst handleOpenLogin = () => {\n// \t\thandleClose();\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_LOGIN_OPEN\",\n// \t\t});\n// \t};\n// \tconst handleOpenRegister = () => {\n// \t\thandleClose();\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_REGISTER_OPEN\",\n// \t\t});\n// \t};\n// \tconst onChange = (e) => {\n// \t\tsetForm({\n// \t\t\t...form,\n// \t\t\t[e.target.name]: e.target.value,\n// \t\t});\n// \t};\n// \tconst registerUser = (e) => {\n// \t\te.preventDefault();\n// \t\taddUser.mutate();\n// \t\tif (addUser.error?.response?.data?.message) {\n// \t\t\thandleClose();\n// \t\t\thandleOpenRegister();\n// \t\t}\n// \t\tif (addUser.data?.data) {\n// \t\t\tsetForm({\n// \t\t\t\temail: \"\",\n// \t\t\t\tfullName: \"\",\n// \t\t\t\tpassword: \"\",\n// \t\t\t\tphone: \"\",\n// \t\t\t\tgender: \"\",\n// \t\t\t});\n// \t\t\tdispatch({\n// \t\t\t\ttype: \"LOGIN_SUCCESS\",\n// \t\t\t\tpayload: addUser.data.data.data.user,\n// \t\t\t});\n// \t\t\tsetAuthToken(addUser.data.data.data.user.token);\n// \t\t\trouter.push(\"/\");\n// \t\t\tconsole.log(\"ok\");\n// \t\t\thandleClose();\n// \t\t}\n// \t\t// console.log(\"Ass\", addUser);\n// \t\t// console.log(\"Assas\", addUser.data.data.data.user);\n// \t};\n// \t// console.log(\"register\", state);\n// \treturn (\n// \t\t<Modal show={state.modalRegister} onHide={handleClose} size=\"sm\" centered>\n// \t\t\t<Modal.Body>\n// \t\t\t\t<div className=\"form-title mb-3\">\n// \t\t\t\t\t<h4 className=\"text-yellow\">Register</h4>\n// \t\t\t\t</div>\n// \t\t\t\t{addUser.error?.response?.data?.message && (\n// \t\t\t\t\t<Alert variant=\"danger\">\n// \t\t\t\t\t\t{addUser.error?.response?.data?.message}\n// \t\t\t\t\t</Alert>\n// \t\t\t\t)}\n// \t\t\t\t<div className=\"d-flex flex-column\">\n// \t\t\t\t\t<Form onSubmit={(e) => registerUser(e)}>\n// \t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"email\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Email\"\n// \t\t\t\t\t\t\t\tvalue={email}\n// \t\t\t\t\t\t\t\tname=\"email\"\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"password\"\n// \t\t\t\t\t\t\t\tname=\"password\"\n// \t\t\t\t\t\t\t\tvalue={password}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Password\"\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Full Name\"\n// \t\t\t\t\t\t\t\tname=\"fullName\"\n// \t\t\t\t\t\t\t\tvalue={fullName}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Gender\"\n// \t\t\t\t\t\t\t\tname=\"gender\"\n// \t\t\t\t\t\t\t\tvalue={gender}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Phone\"\n// \t\t\t\t\t\t\t\tname=\"phone\"\n// \t\t\t\t\t\t\t\tvalue={phone}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t{/* <Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\tas=\"select\"\n// \t\t\t\t\t\t\t\tclassName=\"input-bg\"\n// \t\t\t\t\t\t\t\tname=\"type\"\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\tvalue={form.type}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t<option value=\"1\">As User</option>\n// \t\t\t\t\t\t\t\t<option value=\"2\">As Partner</option>\n// \t\t\t\t\t\t\t</Form.Control>\n// \t\t\t\t\t\t</Form.Group> */}\n// \t\t\t\t\t\t<Button\n// \t\t\t\t\t\t\ttype=\"submit\"\n// \t\t\t\t\t\t\tvariant=\"brown\"\n// \t\t\t\t\t\t\tclassName=\"btn btn-block btn-round\"\n// \t\t\t\t\t\t\t// onClick={registerUser()}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tRegister\n// \t\t\t\t\t\t</Button>\n// \t\t\t\t\t</Form>\n// \t\t\t\t\t<p className=\"text-danger\">{state.errormail}</p>\n// \t\t\t\t\t<div className=\"text-center text-muted delimiter mt-2 \">\n// \t\t\t\t\t\tAlready have an account ? klick {\"\\u00A0\"}\n// \t\t\t\t\t\t<Link\n// \t\t\t\t\t\t\tto=\"#\"\n// \t\t\t\t\t\t\tonClick={handleOpenLogin}\n// \t\t\t\t\t\t\tclassName=\"font-weight-bold text-muted\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\there\n// \t\t\t\t\t\t</Link>\n// \t\t\t\t\t\t.\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</Modal.Body>\n// \t\t</Modal>\n// \t);\n// }\n// export default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/aris/ABC/DU/code/integrasi/front-end/src/pages/Register.js"],"names":["useContext","useState","Link","useHistory","API","setAuthToken","useMutation","useForm","yupResolver","yup","AuthContext","Button","Form","Modal","Alert","schema","object","shape","email","string","required","password","min","Register","router","state","dispatch","form","setForm","fullName","phone","gender","addUser","config","headers","body","JSON","stringify","response","post","handleClose","type","handleOpenLogin","handleOpenRegister","onChange","e","target","name","value","registerUser","preventDefault","mutate","error","data","message","payload","user","token","push","console","log","register","handleSubmit","formState","errors","resolver","onSubmit","visibleAlert","setVisibleAlert","useEffect","setTimeout","modalRegister","errormail"],"mappings":"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":["import { useContext, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { API, setAuthToken } from \"../config/api\";\nimport { useMutation } from \"react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport { AuthContext } from \"../contexts/authContext\";\nimport { Button, Form, Modal, Alert } from \"react-bootstrap\";\n\nconst schema = yup.object().shape({\n\temail: yup.string().email().required(),\n\tpassword: yup.string().min(8).required(),\n});\n\nfunction Register() {\n\tconst router = useHistory();\n\tconst [state, dispatch] = useContext(AuthContext);\n\tconst [form, setForm] = useState({\n\t\temail: \"\",\n\t\tfullName: \"\",\n\t\tpassword: \"\",\n\t\tphone: \"\",\n\t\tgender: \"\",\n\t});\n\n\tconst { email, password, fullName, phone, gender } = form;\n\n\tconst addUser = useMutation(async () => {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\n\t\tconst body = JSON.stringify({\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tfullName,\n\t\t\tphone,\n\t\t\tgender,\n\t\t});\n\n\t\tconst response = await API.post(\"/register\", body, config);\n\t\treturn response;\n\t});\n\n\tconst handleClose = () => {\n\t\tdispatch({\n\t\t\ttype: \"MODAL_REGISTER_CLOSE\",\n\t\t});\n\t};\n\tconst handleOpenLogin = () => {\n\t\thandleClose();\n\t\tdispatch({\n\t\t\ttype: \"MODAL_LOGIN_OPEN\",\n\t\t});\n\t};\n\tconst handleOpenRegister = () => {\n\t\thandleClose();\n\t\tdispatch({\n\t\t\ttype: \"MODAL_REGISTER_OPEN\",\n\t\t});\n\t};\n\tconst onChange = (e) => {\n\t\tsetForm({\n\t\t\t...form,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\n\tconst registerUser = (e) => {\n\t\te.preventDefault();\n\t\taddUser.mutate();\n\n\t\tif (addUser.error?.response?.data?.message) {\n\t\t\thandleClose();\n\t\t\thandleOpenRegister();\n\t\t}\n\n\t\tif (addUser.data?.data) {\n\t\t\tsetForm({\n\t\t\t\temail: \"\",\n\t\t\t\tfullName: \"\",\n\t\t\t\tpassword: \"\",\n\t\t\t\tphone: \"\",\n\t\t\t\tgender: \"\",\n\t\t\t});\n\t\t\tdispatch({\n\t\t\t\ttype: \"LOGIN_SUCCESS\",\n\t\t\t\tpayload: addUser.data.data.data.user,\n\t\t\t});\n\t\t\tsetAuthToken(addUser.data.data.data.user.token);\n\t\t\trouter.push(\"/\");\n\t\t\tconsole.log(\"ok\");\n\t\t\thandleClose();\n\t\t}\n\t};\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm({\n\t\tresolver: yupResolver(schema),\n\t});\n\n\tconst onSubmit = useMutation(async (data) => {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\t\tconst body = JSON.stringify({\n\t\t\temail: data.email,\n\t\t\tpassword: data.password,\n\t\t\tfullName: data.fullName,\n\t\t});\n\t\tconst response = await API.post(\"/register\", body, config);\n\n\t\tconsole.log(\"res-akhir\", response.data?.data?.user?.token);\n\n\t\tsetAuthToken(response.data?.data?.user?.token);\n\t\tdispatch({\n\t\t\ttype: \"LOGIN_SUCCESS\",\n\t\t\tpayload: response.data?.data?.user,\n\t\t});\n\n\t\trouter.push(\"/\");\n\t\treturn response;\n\t});\n\n\t// alert\n\tconst [visibleAlert, setVisibleAlert] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (onSubmit.error?.response?.data?.message) {\n\t\t\tsetVisibleAlert(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetVisibleAlert(false);\n\t\t\t}, 2000);\n\t\t}\n\t}, [onSubmit.error?.response?.data?.message]);\n\n\treturn (\n\t\t<Modal show={state.modalRegister} onHide={handleClose} size=\"sm\" centered>\n\t\t\t<Modal.Body>\n\t\t\t\t<div className=\"form-title mb-3\">\n\t\t\t\t\t<h4 className=\"text-yellow\">Register</h4>\n\t\t\t\t</div>\n\t\t\t\t<Alert\n\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\tshow={visibleAlert}\n\t\t\t\t\tonClose={() => setVisibleAlert(false)}\n\t\t\t\t\tdismissible\n\t\t\t\t>\n\t\t\t\t\t{onSubmit.error?.response?.data?.message}\n\t\t\t\t</Alert>\n\t\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t\t<Form onSubmit={(e) => registerUser(e)}>\n\t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Full Name\"\n\t\t\t\t\t\t\t\tname=\"fullName\"\n\t\t\t\t\t\t\t\tvalue={fullName}\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Gender\"\n\t\t\t\t\t\t\t\tname=\"gender\"\n\t\t\t\t\t\t\t\tvalue={gender}\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Phone\"\n\t\t\t\t\t\t\t\tname=\"phone\"\n\t\t\t\t\t\t\t\tvalue={phone}\n\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvariant=\"brown\"\n\t\t\t\t\t\t\tclassName=\"btn btn-block btn-round\"\n\t\t\t\t\t\t\t// onClick={registerUser()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t\t<p className=\"text-danger\">{state.errormail}</p>\n\t\t\t\t\t<div className=\"text-center text-muted delimiter mt-2 \">\n\t\t\t\t\t\tAlready have an account ? klick {\"\\u00A0\"}\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto=\"#\"\n\t\t\t\t\t\t\tonClick={handleOpenLogin}\n\t\t\t\t\t\t\tclassName=\"font-weight-bold text-muted\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\there\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t.\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal.Body>\n\t\t</Modal>\n\t);\n}\n\nexport default Register;\n\n// import { useContext, useState } from \"react\";\n// import { Link, useHistory } from \"react-router-dom\";\n\n// import { AuthContext } from \"../contexts/authContext\";\n\n// import { Button, Form, Modal, Alert } from \"react-bootstrap\";\n// import { useMutation } from \"react-query\";\n// import { API, setAuthToken } from \"../config/api\";\n\n// function Register() {\n// \tconst router = useHistory();\n// \tconst [state, dispatch] = useContext(AuthContext);\n// \tconst [form, setForm] = useState({\n// \t\temail: \"\",\n// \t\tfullName: \"\",\n// \t\tpassword: \"\",\n// \t\tphone: \"\",\n// \t\tgender: \"\",\n// \t});\n\n// \tconst { email, password, fullName, phone, gender } = form;\n\n// \tconst addUser = useMutation(async () => {\n// \t\tconst config = {\n// \t\t\theaders: {\n// \t\t\t\t\"Content-Type\": \"application/json\",\n// \t\t\t},\n// \t\t};\n\n// \t\tconst body = JSON.stringify({\n// \t\t\temail,\n// \t\t\tpassword,\n// \t\t\tfullName,\n// \t\t\tphone,\n// \t\t\tgender,\n// \t\t});\n\n// \t\tconst response = await API.post(\"/register\", body, config);\n// \t\treturn response;\n// \t});\n\n// \t// const handleSubmit = () => {\n// \t// \taddUser.mutate();\n// \t// };\n\n// \tconst handleClose = () => {\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_REGISTER_CLOSE\",\n// \t\t});\n// \t};\n// \tconst handleOpenLogin = () => {\n// \t\thandleClose();\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_LOGIN_OPEN\",\n// \t\t});\n// \t};\n// \tconst handleOpenRegister = () => {\n// \t\thandleClose();\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_REGISTER_OPEN\",\n// \t\t});\n// \t};\n// \tconst onChange = (e) => {\n// \t\tsetForm({\n// \t\t\t...form,\n// \t\t\t[e.target.name]: e.target.value,\n// \t\t});\n// \t};\n\n// \tconst registerUser = (e) => {\n// \t\te.preventDefault();\n// \t\taddUser.mutate();\n\n// \t\tif (addUser.error?.response?.data?.message) {\n// \t\t\thandleClose();\n// \t\t\thandleOpenRegister();\n// \t\t}\n\n// \t\tif (addUser.data?.data) {\n// \t\t\tsetForm({\n// \t\t\t\temail: \"\",\n// \t\t\t\tfullName: \"\",\n// \t\t\t\tpassword: \"\",\n// \t\t\t\tphone: \"\",\n// \t\t\t\tgender: \"\",\n// \t\t\t});\n// \t\t\tdispatch({\n// \t\t\t\ttype: \"LOGIN_SUCCESS\",\n// \t\t\t\tpayload: addUser.data.data.data.user,\n// \t\t\t});\n// \t\t\tsetAuthToken(addUser.data.data.data.user.token);\n// \t\t\trouter.push(\"/\");\n// \t\t\tconsole.log(\"ok\");\n// \t\t\thandleClose();\n// \t\t}\n// \t\t// console.log(\"Ass\", addUser);\n// \t\t// console.log(\"Assas\", addUser.data.data.data.user);\n// \t};\n// \t// console.log(\"register\", state);\n// \treturn (\n// \t\t<Modal show={state.modalRegister} onHide={handleClose} size=\"sm\" centered>\n// \t\t\t<Modal.Body>\n// \t\t\t\t<div className=\"form-title mb-3\">\n// \t\t\t\t\t<h4 className=\"text-yellow\">Register</h4>\n// \t\t\t\t</div>\n// \t\t\t\t{addUser.error?.response?.data?.message && (\n// \t\t\t\t\t<Alert variant=\"danger\">\n// \t\t\t\t\t\t{addUser.error?.response?.data?.message}\n// \t\t\t\t\t</Alert>\n// \t\t\t\t)}\n// \t\t\t\t<div className=\"d-flex flex-column\">\n// \t\t\t\t\t<Form onSubmit={(e) => registerUser(e)}>\n// \t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"email\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Email\"\n// \t\t\t\t\t\t\t\tvalue={email}\n// \t\t\t\t\t\t\t\tname=\"email\"\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"password\"\n// \t\t\t\t\t\t\t\tname=\"password\"\n// \t\t\t\t\t\t\t\tvalue={password}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Password\"\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Full Name\"\n// \t\t\t\t\t\t\t\tname=\"fullName\"\n// \t\t\t\t\t\t\t\tvalue={fullName}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Gender\"\n// \t\t\t\t\t\t\t\tname=\"gender\"\n// \t\t\t\t\t\t\t\tvalue={gender}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Phone\"\n// \t\t\t\t\t\t\t\tname=\"phone\"\n// \t\t\t\t\t\t\t\tvalue={phone}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t{/* <Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\tas=\"select\"\n// \t\t\t\t\t\t\t\tclassName=\"input-bg\"\n// \t\t\t\t\t\t\t\tname=\"type\"\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\tvalue={form.type}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t<option value=\"1\">As User</option>\n// \t\t\t\t\t\t\t\t<option value=\"2\">As Partner</option>\n// \t\t\t\t\t\t\t</Form.Control>\n// \t\t\t\t\t\t</Form.Group> */}\n// \t\t\t\t\t\t<Button\n// \t\t\t\t\t\t\ttype=\"submit\"\n// \t\t\t\t\t\t\tvariant=\"brown\"\n// \t\t\t\t\t\t\tclassName=\"btn btn-block btn-round\"\n// \t\t\t\t\t\t\t// onClick={registerUser()}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tRegister\n// \t\t\t\t\t\t</Button>\n// \t\t\t\t\t</Form>\n// \t\t\t\t\t<p className=\"text-danger\">{state.errormail}</p>\n// \t\t\t\t\t<div className=\"text-center text-muted delimiter mt-2 \">\n// \t\t\t\t\t\tAlready have an account ? klick {\"\\u00A0\"}\n// \t\t\t\t\t\t<Link\n// \t\t\t\t\t\t\tto=\"#\"\n// \t\t\t\t\t\t\tonClick={handleOpenLogin}\n// \t\t\t\t\t\t\tclassName=\"font-weight-bold text-muted\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\there\n// \t\t\t\t\t\t</Link>\n// \t\t\t\t\t\t.\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</Modal.Body>\n// \t\t</Modal>\n// \t);\n// }\n\n// export default Register;\n"]},"metadata":{},"sourceType":"module"}