{"ast":null,"code":"var _jsxFileName = \"/Users/aris/ABC/DU/code/integrasi/front-end/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { API, setAuthToken } from \"../config/api\";\nimport { useMutation } from \"react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport { Button, Form, Modal, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().min(8).required()\n});\n\nfunction Register() {\n  _s();\n\n  var _onSubmit$error2, _onSubmit$error2$resp, _onSubmit$error2$resp2, _onSubmit$error3, _onSubmit$error3$resp, _onSubmit$error3$resp2;\n\n  const router = useHistory();\n  const [state, dispatch] = useContext(AuthContext);\n\n  const handleClose = () => {\n    dispatch({\n      type: \"MODAL_REGISTER_CLOSE\"\n    });\n  };\n\n  const handleOpenLogin = () => {\n    handleClose();\n    dispatch({\n      type: \"MODAL_LOGIN_OPEN\"\n    });\n  };\n\n  const handleOpenRegister = () => {\n    handleClose();\n    dispatch({\n      type: \"MODAL_REGISTER_OPEN\"\n    });\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = useMutation(async data => {\n    var _response$data, _response$data$data, _response$data$data$u, _response$data2, _response$data2$data, _response$data2$data$, _response$data3, _response$data3$data;\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    console.log(data);\n    const body = JSON.stringify({\n      email: data.email,\n      fullName: data.fullname,\n      password: data.password,\n      phone: data.phone,\n      gender: data.gender\n    });\n    const response = await API.post(\"/register\", body, config);\n    console.log(\"res-akhir\", (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : (_response$data$data$u = _response$data$data.user) === null || _response$data$data$u === void 0 ? void 0 : _response$data$data$u.token);\n    setAuthToken((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$data = _response$data2.data) === null || _response$data2$data === void 0 ? void 0 : (_response$data2$data$ = _response$data2$data.user) === null || _response$data2$data$ === void 0 ? void 0 : _response$data2$data$.token);\n    dispatch({\n      type: \"LOGIN_SUCCESS\",\n      payload: (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : (_response$data3$data = _response$data3.data) === null || _response$data3$data === void 0 ? void 0 : _response$data3$data.user\n    });\n    handleClose();\n    router.push(\"/\");\n    reset();\n    return response;\n  }); // alert\n\n  const [visibleAlert, setVisibleAlert] = useState(false);\n  useEffect(() => {\n    var _onSubmit$error, _onSubmit$error$respo, _onSubmit$error$respo2;\n\n    if ((_onSubmit$error = onSubmit.error) === null || _onSubmit$error === void 0 ? void 0 : (_onSubmit$error$respo = _onSubmit$error.response) === null || _onSubmit$error$respo === void 0 ? void 0 : (_onSubmit$error$respo2 = _onSubmit$error$respo.data) === null || _onSubmit$error$respo2 === void 0 ? void 0 : _onSubmit$error$respo2.message) {\n      setVisibleAlert(true);\n      setTimeout(() => {\n        setVisibleAlert(false);\n      }, 2000);\n    }\n  }, [(_onSubmit$error2 = onSubmit.error) === null || _onSubmit$error2 === void 0 ? void 0 : (_onSubmit$error2$resp = _onSubmit$error2.response) === null || _onSubmit$error2$resp === void 0 ? void 0 : (_onSubmit$error2$resp2 = _onSubmit$error2$resp.data) === null || _onSubmit$error2$resp2 === void 0 ? void 0 : _onSubmit$error2$resp2.message]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: state.modalRegister,\n    onHide: handleClose,\n    size: \"sm\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-title mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-yellow\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        show: visibleAlert,\n        onClose: () => setVisibleAlert(false),\n        dismissible: true,\n        children: (_onSubmit$error3 = onSubmit.error) === null || _onSubmit$error3 === void 0 ? void 0 : (_onSubmit$error3$resp = _onSubmit$error3.response) === null || _onSubmit$error3$resp === void 0 ? void 0 : (_onSubmit$error3$resp2 = _onSubmit$error3$resp.data) === null || _onSubmit$error3$resp2 === void 0 ? void 0 : _onSubmit$error3$resp2.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(onSubmit.mutate),\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              className: \"form-control input-bg\",\n              placeholder: \"Email\",\n              ...register(\"email\"),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ...register(\"password\"),\n              className: \"form-control input-bg\",\n              placeholder: \"Password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"form-control input-bg\",\n              placeholder: \"Full Name\",\n              ...register(\"fullname\"),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              custom: true,\n              className: \"form-control input-bg\",\n              placeholder: \"Gender\",\n              ...register(\"gender\"),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"female\",\n                children: \"female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"male\",\n                children: \"male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              className: \"form-control input-bg\",\n              placeholder: \"Phone\",\n              ...register(\"phone\"),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"brown\",\n            className: \"btn btn-block btn-round\" // onClick={registerUser()}\n            ,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: state.errormail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-muted delimiter mt-2 \",\n          children: [\"Already have an account ? klick \", \"\\u00A0\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: handleOpenLogin,\n            className: \"font-weight-bold text-muted\",\n            children: \"here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 7\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Register, \"0s9QOSVHipmUQU+lA4OO/UMM1IA=\", false, function () {\n  return [useHistory, useForm, useMutation];\n});\n\n_c = Register;\nexport default Register; // import { useContext, useState } from \"react\";\n// import { Link, useHistory } from \"react-router-dom\";\n// import { AuthContext } from \"../contexts/authContext\";\n// import { Button, Form, Modal, Alert } from \"react-bootstrap\";\n// import { useMutation } from \"react-query\";\n// import { API, setAuthToken } from \"../config/api\";\n// function Register() {\n// \tconst router = useHistory();\n// \tconst [state, dispatch] = useContext(AuthContext);\n// \tconst [form, setForm] = useState({\n// \t\temail: \"\",\n// \t\tfullName: \"\",\n// \t\tpassword: \"\",\n// \t\tphone: \"\",\n// \t\tgender: \"\",\n// \t});\n// \tconst { email, password, fullName, phone, gender } = form;\n// \tconst addUser = useMutation(async () => {\n// \t\tconst config = {\n// \t\t\theaders: {\n// \t\t\t\t\"Content-Type\": \"application/json\",\n// \t\t\t},\n// \t\t};\n// \t\tconst body = JSON.stringify({\n// \t\t\temail,\n// \t\t\tpassword,\n// \t\t\tfullName,\n// \t\t\tphone,\n// \t\t\tgender,\n// \t\t});\n// \t\tconst response = await API.post(\"/register\", body, config);\n// \t\treturn response;\n// \t});\n// \t// const handleSubmit = () => {\n// \t// \taddUser.mutate();\n// \t// };\n// \tconst handleClose = () => {\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_REGISTER_CLOSE\",\n// \t\t});\n// \t};\n// \tconst handleOpenLogin = () => {\n// \t\thandleClose();\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_LOGIN_OPEN\",\n// \t\t});\n// \t};\n// \tconst handleOpenRegister = () => {\n// \t\thandleClose();\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_REGISTER_OPEN\",\n// \t\t});\n// \t};\n// \tconst onChange = (e) => {\n// \t\tsetForm({\n// \t\t\t...form,\n// \t\t\t[e.target.name]: e.target.value,\n// \t\t});\n// \t};\n// \tconst registerUser = (e) => {\n// \t\te.preventDefault();\n// \t\taddUser.mutate();\n// \t\tif (addUser.error?.response?.data?.message) {\n// \t\t\thandleClose();\n// \t\t\thandleOpenRegister();\n// \t\t}\n// \t\tif (addUser.data?.data) {\n// \t\t\tsetForm({\n// \t\t\t\temail: \"\",\n// \t\t\t\tfullName: \"\",\n// \t\t\t\tpassword: \"\",\n// \t\t\t\tphone: \"\",\n// \t\t\t\tgender: \"\",\n// \t\t\t});\n// \t\t\tdispatch({\n// \t\t\t\ttype: \"LOGIN_SUCCESS\",\n// \t\t\t\tpayload: addUser.data.data.data.user,\n// \t\t\t});\n// \t\t\tsetAuthToken(addUser.data.data.data.user.token);\n// \t\t\trouter.push(\"/\");\n// \t\t\tconsole.log(\"ok\");\n// \t\t\thandleClose();\n// \t\t}\n// \t\t// console.log(\"Ass\", addUser);\n// \t\t// console.log(\"Assas\", addUser.data.data.data.user);\n// \t};\n// \t// console.log(\"register\", state);\n// \treturn (\n// \t\t<Modal show={state.modalRegister} onHide={handleClose} size=\"sm\" centered>\n// \t\t\t<Modal.Body>\n// \t\t\t\t<div className=\"form-title mb-3\">\n// \t\t\t\t\t<h4 className=\"text-yellow\">Register</h4>\n// \t\t\t\t</div>\n// \t\t\t\t{addUser.error?.response?.data?.message && (\n// \t\t\t\t\t<Alert variant=\"danger\">\n// \t\t\t\t\t\t{addUser.error?.response?.data?.message}\n// \t\t\t\t\t</Alert>\n// \t\t\t\t)}\n// \t\t\t\t<div className=\"d-flex flex-column\">\n// \t\t\t\t\t<Form onSubmit={(e) => registerUser(e)}>\n// \t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"email\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Email\"\n// \t\t\t\t\t\t\t\tvalue={email}\n// \t\t\t\t\t\t\t\tname=\"email\"\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"password\"\n// \t\t\t\t\t\t\t\tname=\"password\"\n// \t\t\t\t\t\t\t\tvalue={password}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Password\"\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Full Name\"\n// \t\t\t\t\t\t\t\tname=\"fullName\"\n// \t\t\t\t\t\t\t\tvalue={fullName}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Gender\"\n// \t\t\t\t\t\t\t\tname=\"gender\"\n// \t\t\t\t\t\t\t\tvalue={gender}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Phone\"\n// \t\t\t\t\t\t\t\tname=\"phone\"\n// \t\t\t\t\t\t\t\tvalue={phone}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t{/* <Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\tas=\"select\"\n// \t\t\t\t\t\t\t\tclassName=\"input-bg\"\n// \t\t\t\t\t\t\t\tname=\"type\"\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\tvalue={form.type}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t<option value=\"1\">As User</option>\n// \t\t\t\t\t\t\t\t<option value=\"2\">As Partner</option>\n// \t\t\t\t\t\t\t</Form.Control>\n// \t\t\t\t\t\t</Form.Group> */}\n// \t\t\t\t\t\t<Button\n// \t\t\t\t\t\t\ttype=\"submit\"\n// \t\t\t\t\t\t\tvariant=\"brown\"\n// \t\t\t\t\t\t\tclassName=\"btn btn-block btn-round\"\n// \t\t\t\t\t\t\t// onClick={registerUser()}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tRegister\n// \t\t\t\t\t\t</Button>\n// \t\t\t\t\t</Form>\n// \t\t\t\t\t<p className=\"text-danger\">{state.errormail}</p>\n// \t\t\t\t\t<div className=\"text-center text-muted delimiter mt-2 \">\n// \t\t\t\t\t\tAlready have an account ? klick {\"\\u00A0\"}\n// \t\t\t\t\t\t<Link\n// \t\t\t\t\t\t\tto=\"#\"\n// \t\t\t\t\t\t\tonClick={handleOpenLogin}\n// \t\t\t\t\t\t\tclassName=\"font-weight-bold text-muted\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\there\n// \t\t\t\t\t\t</Link>\n// \t\t\t\t\t\t.\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</Modal.Body>\n// \t\t</Modal>\n// \t);\n// }\n// export default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/aris/ABC/DU/code/integrasi/front-end/src/pages/Register.js"],"names":["useContext","useState","useEffect","Link","useHistory","API","setAuthToken","useMutation","useForm","yupResolver","yup","AuthContext","Button","Form","Modal","Alert","schema","object","shape","email","string","required","password","min","Register","router","state","dispatch","handleClose","type","handleOpenLogin","handleOpenRegister","register","handleSubmit","formState","errors","reset","resolver","onSubmit","data","config","headers","console","log","body","JSON","stringify","fullName","fullname","phone","gender","response","post","user","token","payload","push","visibleAlert","setVisibleAlert","error","message","setTimeout","modalRegister","mutate","errormail"],"mappings":"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;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjDD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eA4DC;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BN,KAAK,CAACsC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBA5DD,eA6DC;AAAK,UAAA,SAAS,EAAC,wCAAf;AAAA,yDACkC,QADlC,eAEC,QAAC,IAAD;AACC,YAAA,EAAE,EAAC,GADJ;AAEC,YAAA,OAAO,EAAElC,eAFV;AAGC,YAAA,SAAS,EAAC,6BAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7DD;AAAA;AAAA;AAAA;AAAA;AAAA,cAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA0FA;;GAlKQN,Q;UACOpB,U,EA0BXI,O,EAIaD,W;;;KA/BTiB,Q;AAoKT,eAAeA,QAAf,C,CAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { API, setAuthToken } from \"../config/api\";\nimport { useMutation } from \"react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport { AuthContext } from \"../contexts/authContext\";\nimport { Button, Form, Modal, Alert } from \"react-bootstrap\";\n\nconst schema = yup.object().shape({\n\temail: yup.string().email().required(),\n\tpassword: yup.string().min(8).required(),\n});\n\nfunction Register() {\n\tconst router = useHistory();\n\tconst [state, dispatch] = useContext(AuthContext);\n\n\tconst handleClose = () => {\n\t\tdispatch({\n\t\t\ttype: \"MODAL_REGISTER_CLOSE\",\n\t\t});\n\t};\n\tconst handleOpenLogin = () => {\n\t\thandleClose();\n\t\tdispatch({\n\t\t\ttype: \"MODAL_LOGIN_OPEN\",\n\t\t});\n\t};\n\tconst handleOpenRegister = () => {\n\t\thandleClose();\n\t\tdispatch({\n\t\t\ttype: \"MODAL_REGISTER_OPEN\",\n\t\t});\n\t};\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t\treset,\n\t} = useForm({\n\t\tresolver: yupResolver(schema),\n\t});\n\n\tconst onSubmit = useMutation(async (data) => {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\t\tconsole.log(data);\n\t\tconst body = JSON.stringify({\n\t\t\temail: data.email,\n\t\t\tfullName: data.fullname,\n\t\t\tpassword: data.password,\n\t\t\tphone: data.phone,\n\t\t\tgender: data.gender,\n\t\t});\n\t\tconst response = await API.post(\"/register\", body, config);\n\n\t\tconsole.log(\"res-akhir\", response.data?.data?.user?.token);\n\n\t\tsetAuthToken(response.data?.data?.user?.token);\n\t\tdispatch({\n\t\t\ttype: \"LOGIN_SUCCESS\",\n\t\t\tpayload: response.data?.data?.user,\n\t\t});\n\t\thandleClose();\n\t\trouter.push(\"/\");\n\t\treset();\n\t\treturn response;\n\t});\n\n\t// alert\n\tconst [visibleAlert, setVisibleAlert] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (onSubmit.error?.response?.data?.message) {\n\t\t\tsetVisibleAlert(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetVisibleAlert(false);\n\t\t\t}, 2000);\n\t\t}\n\t}, [onSubmit.error?.response?.data?.message]);\n\n\treturn (\n\t\t<Modal show={state.modalRegister} onHide={handleClose} size=\"sm\" centered>\n\t\t\t<Modal.Body>\n\t\t\t\t<div className=\"form-title mb-3\">\n\t\t\t\t\t<h4 className=\"text-yellow\">Register</h4>\n\t\t\t\t</div>\n\t\t\t\t<Alert\n\t\t\t\t\tvariant=\"danger\"\n\t\t\t\t\tshow={visibleAlert}\n\t\t\t\t\tonClose={() => setVisibleAlert(false)}\n\t\t\t\t\tdismissible\n\t\t\t\t>\n\t\t\t\t\t{onSubmit.error?.response?.data?.message}\n\t\t\t\t</Alert>\n\t\t\t\t<div className=\"d-flex flex-column\">\n\t\t\t\t\t{/* <Form onSubmit={(e) => registerUser(e)}> */}\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmit.mutate)}>\n\t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\t{...register(\"email\")}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t{...register(\"password\")}\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Full Name\"\n\t\t\t\t\t\t\t\t{...register(\"fullname\")}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\t\tcustom\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Gender\"\n\t\t\t\t\t\t\t\t{...register(\"gender\")}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option value=\"female\">female</option>\n\t\t\t\t\t\t\t\t<option value=\"male\">male</option>\n\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n\t\t\t\t\t\t\t\tplaceholder=\"Phone\"\n\t\t\t\t\t\t\t\t{...register(\"phone\")}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvariant=\"brown\"\n\t\t\t\t\t\t\tclassName=\"btn btn-block btn-round\"\n\t\t\t\t\t\t\t// onClick={registerUser()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t\t<p className=\"text-danger\">{state.errormail}</p>\n\t\t\t\t\t<div className=\"text-center text-muted delimiter mt-2 \">\n\t\t\t\t\t\tAlready have an account ? klick {\"\\u00A0\"}\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto=\"#\"\n\t\t\t\t\t\t\tonClick={handleOpenLogin}\n\t\t\t\t\t\t\tclassName=\"font-weight-bold text-muted\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\there\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t.\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal.Body>\n\t\t</Modal>\n\t);\n}\n\nexport default Register;\n\n// import { useContext, useState } from \"react\";\n// import { Link, useHistory } from \"react-router-dom\";\n\n// import { AuthContext } from \"../contexts/authContext\";\n\n// import { Button, Form, Modal, Alert } from \"react-bootstrap\";\n// import { useMutation } from \"react-query\";\n// import { API, setAuthToken } from \"../config/api\";\n\n// function Register() {\n// \tconst router = useHistory();\n// \tconst [state, dispatch] = useContext(AuthContext);\n// \tconst [form, setForm] = useState({\n// \t\temail: \"\",\n// \t\tfullName: \"\",\n// \t\tpassword: \"\",\n// \t\tphone: \"\",\n// \t\tgender: \"\",\n// \t});\n\n// \tconst { email, password, fullName, phone, gender } = form;\n\n// \tconst addUser = useMutation(async () => {\n// \t\tconst config = {\n// \t\t\theaders: {\n// \t\t\t\t\"Content-Type\": \"application/json\",\n// \t\t\t},\n// \t\t};\n\n// \t\tconst body = JSON.stringify({\n// \t\t\temail,\n// \t\t\tpassword,\n// \t\t\tfullName,\n// \t\t\tphone,\n// \t\t\tgender,\n// \t\t});\n\n// \t\tconst response = await API.post(\"/register\", body, config);\n// \t\treturn response;\n// \t});\n\n// \t// const handleSubmit = () => {\n// \t// \taddUser.mutate();\n// \t// };\n\n// \tconst handleClose = () => {\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_REGISTER_CLOSE\",\n// \t\t});\n// \t};\n// \tconst handleOpenLogin = () => {\n// \t\thandleClose();\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_LOGIN_OPEN\",\n// \t\t});\n// \t};\n// \tconst handleOpenRegister = () => {\n// \t\thandleClose();\n// \t\tdispatch({\n// \t\t\ttype: \"MODAL_REGISTER_OPEN\",\n// \t\t});\n// \t};\n// \tconst onChange = (e) => {\n// \t\tsetForm({\n// \t\t\t...form,\n// \t\t\t[e.target.name]: e.target.value,\n// \t\t});\n// \t};\n\n// \tconst registerUser = (e) => {\n// \t\te.preventDefault();\n// \t\taddUser.mutate();\n\n// \t\tif (addUser.error?.response?.data?.message) {\n// \t\t\thandleClose();\n// \t\t\thandleOpenRegister();\n// \t\t}\n\n// \t\tif (addUser.data?.data) {\n// \t\t\tsetForm({\n// \t\t\t\temail: \"\",\n// \t\t\t\tfullName: \"\",\n// \t\t\t\tpassword: \"\",\n// \t\t\t\tphone: \"\",\n// \t\t\t\tgender: \"\",\n// \t\t\t});\n// \t\t\tdispatch({\n// \t\t\t\ttype: \"LOGIN_SUCCESS\",\n// \t\t\t\tpayload: addUser.data.data.data.user,\n// \t\t\t});\n// \t\t\tsetAuthToken(addUser.data.data.data.user.token);\n// \t\t\trouter.push(\"/\");\n// \t\t\tconsole.log(\"ok\");\n// \t\t\thandleClose();\n// \t\t}\n// \t\t// console.log(\"Ass\", addUser);\n// \t\t// console.log(\"Assas\", addUser.data.data.data.user);\n// \t};\n// \t// console.log(\"register\", state);\n// \treturn (\n// \t\t<Modal show={state.modalRegister} onHide={handleClose} size=\"sm\" centered>\n// \t\t\t<Modal.Body>\n// \t\t\t\t<div className=\"form-title mb-3\">\n// \t\t\t\t\t<h4 className=\"text-yellow\">Register</h4>\n// \t\t\t\t</div>\n// \t\t\t\t{addUser.error?.response?.data?.message && (\n// \t\t\t\t\t<Alert variant=\"danger\">\n// \t\t\t\t\t\t{addUser.error?.response?.data?.message}\n// \t\t\t\t\t</Alert>\n// \t\t\t\t)}\n// \t\t\t\t<div className=\"d-flex flex-column\">\n// \t\t\t\t\t<Form onSubmit={(e) => registerUser(e)}>\n// \t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"email\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Email\"\n// \t\t\t\t\t\t\t\tvalue={email}\n// \t\t\t\t\t\t\t\tname=\"email\"\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"password\"\n// \t\t\t\t\t\t\t\tname=\"password\"\n// \t\t\t\t\t\t\t\tvalue={password}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Password\"\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Full Name\"\n// \t\t\t\t\t\t\t\tname=\"fullName\"\n// \t\t\t\t\t\t\t\tvalue={fullName}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Gender\"\n// \t\t\t\t\t\t\t\tname=\"gender\"\n// \t\t\t\t\t\t\t\tvalue={gender}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t<Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\ttype=\"text\"\n// \t\t\t\t\t\t\t\tclassName=\"form-control input-bg\"\n// \t\t\t\t\t\t\t\tplaceholder=\"Phone\"\n// \t\t\t\t\t\t\t\tname=\"phone\"\n// \t\t\t\t\t\t\t\tvalue={phone}\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</Form.Group>\n// \t\t\t\t\t\t{/* <Form.Group>\n// \t\t\t\t\t\t\t<Form.Control\n// \t\t\t\t\t\t\t\tas=\"select\"\n// \t\t\t\t\t\t\t\tclassName=\"input-bg\"\n// \t\t\t\t\t\t\t\tname=\"type\"\n// \t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n// \t\t\t\t\t\t\t\tvalue={form.type}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t<option value=\"1\">As User</option>\n// \t\t\t\t\t\t\t\t<option value=\"2\">As Partner</option>\n// \t\t\t\t\t\t\t</Form.Control>\n// \t\t\t\t\t\t</Form.Group> */}\n// \t\t\t\t\t\t<Button\n// \t\t\t\t\t\t\ttype=\"submit\"\n// \t\t\t\t\t\t\tvariant=\"brown\"\n// \t\t\t\t\t\t\tclassName=\"btn btn-block btn-round\"\n// \t\t\t\t\t\t\t// onClick={registerUser()}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tRegister\n// \t\t\t\t\t\t</Button>\n// \t\t\t\t\t</Form>\n// \t\t\t\t\t<p className=\"text-danger\">{state.errormail}</p>\n// \t\t\t\t\t<div className=\"text-center text-muted delimiter mt-2 \">\n// \t\t\t\t\t\tAlready have an account ? klick {\"\\u00A0\"}\n// \t\t\t\t\t\t<Link\n// \t\t\t\t\t\t\tto=\"#\"\n// \t\t\t\t\t\t\tonClick={handleOpenLogin}\n// \t\t\t\t\t\t\tclassName=\"font-weight-bold text-muted\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\there\n// \t\t\t\t\t\t</Link>\n// \t\t\t\t\t\t.\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</Modal.Body>\n// \t\t</Modal>\n// \t);\n// }\n\n// export default Register;\n"]},"metadata":{},"sourceType":"module"}